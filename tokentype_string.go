// Code generated by "stringer -type TokenType"; DO NOT EDIT

package chroma

import "fmt"

const _TokenType_name = "EscapeErrorOtherKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNamePropertyNameLabelNameNamespaceNameOtherNameTagNameVariableNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralStringLiteralStringAffixLiteralStringBacktickLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentPreprocCommentPreprocFileCommentSingleCommentSpecialGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackTextTextWhitespace"

var _TokenType_map = map[TokenType]string{
	0:    _TokenType_name[0:6],
	1:    _TokenType_name[6:11],
	2:    _TokenType_name[11:16],
	1000: _TokenType_name[16:23],
	1001: _TokenType_name[23:38],
	1002: _TokenType_name[38:56],
	1003: _TokenType_name[56:72],
	1004: _TokenType_name[72:85],
	1005: _TokenType_name[85:100],
	1006: _TokenType_name[100:111],
	2000: _TokenType_name[111:115],
	2001: _TokenType_name[115:128],
	2002: _TokenType_name[128:139],
	2003: _TokenType_name[139:156],
	2004: _TokenType_name[156:165],
	2005: _TokenType_name[165:177],
	2006: _TokenType_name[177:190],
	2007: _TokenType_name[190:200],
	2008: _TokenType_name[200:213],
	2009: _TokenType_name[213:225],
	2010: _TokenType_name[225:242],
	2011: _TokenType_name[242:254],
	2012: _TokenType_name[254:263],
	2013: _TokenType_name[263:276],
	2014: _TokenType_name[276:285],
	2015: _TokenType_name[285:292],
	2016: _TokenType_name[292:304],
	2017: _TokenType_name[304:321],
	2018: _TokenType_name[321:339],
	2019: _TokenType_name[339:359],
	2020: _TokenType_name[359:376],
	3000: _TokenType_name[376:383],
	3001: _TokenType_name[383:394],
	3100: _TokenType_name[394:407],
	3101: _TokenType_name[407:425],
	3102: _TokenType_name[425:446],
	3103: _TokenType_name[446:463],
	3104: _TokenType_name[463:485],
	3105: _TokenType_name[485:501],
	3106: _TokenType_name[501:520],
	3107: _TokenType_name[520:539],
	3108: _TokenType_name[539:559],
	3109: _TokenType_name[559:580],
	3110: _TokenType_name[580:598],
	3111: _TokenType_name[598:616],
	3112: _TokenType_name[616:635],
	3113: _TokenType_name[635:654],
	3200: _TokenType_name[654:667],
	3201: _TokenType_name[667:683],
	3202: _TokenType_name[683:701],
	3203: _TokenType_name[701:717],
	3204: _TokenType_name[717:737],
	3205: _TokenType_name[737:761],
	3206: _TokenType_name[761:777],
	4000: _TokenType_name[777:785],
	4001: _TokenType_name[785:797],
	5000: _TokenType_name[797:808],
	6000: _TokenType_name[808:815],
	6001: _TokenType_name[815:830],
	6002: _TokenType_name[830:846],
	6003: _TokenType_name[846:860],
	6004: _TokenType_name[860:878],
	6005: _TokenType_name[878:891],
	6006: _TokenType_name[891:905],
	7000: _TokenType_name[905:912],
	7001: _TokenType_name[912:926],
	7002: _TokenType_name[926:937],
	7003: _TokenType_name[937:949],
	7004: _TokenType_name[949:963],
	7005: _TokenType_name[963:978],
	7006: _TokenType_name[978:991],
	7007: _TokenType_name[991:1004],
	7008: _TokenType_name[1004:1017],
	7009: _TokenType_name[1017:1034],
	7010: _TokenType_name[1034:1050],
	8000: _TokenType_name[1050:1054],
	8001: _TokenType_name[1054:1068],
}

func (i TokenType) String() string {
	if str, ok := _TokenType_map[i]; ok {
		return str
	}
	return fmt.Sprintf("TokenType(%d)", i)
}
