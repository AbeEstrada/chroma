// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package chroma

import "fmt"

const _TokenType_name = "EOFNoneOtherErrorEscapeBackgroundKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation"

var _TokenType_map = map[TokenType]string{
	-6:   _TokenType_name[0:3],
	-5:   _TokenType_name[3:7],
	-4:   _TokenType_name[7:12],
	-3:   _TokenType_name[12:17],
	-2:   _TokenType_name[17:23],
	-1:   _TokenType_name[23:33],
	1000: _TokenType_name[33:40],
	1001: _TokenType_name[40:55],
	1002: _TokenType_name[55:73],
	1003: _TokenType_name[73:89],
	1004: _TokenType_name[89:102],
	1005: _TokenType_name[102:117],
	1006: _TokenType_name[117:128],
	2000: _TokenType_name[128:132],
	2001: _TokenType_name[132:145],
	2002: _TokenType_name[145:156],
	2003: _TokenType_name[156:173],
	2004: _TokenType_name[173:182],
	2005: _TokenType_name[182:194],
	2006: _TokenType_name[194:207],
	2007: _TokenType_name[207:217],
	2008: _TokenType_name[217:230],
	2009: _TokenType_name[230:242],
	2010: _TokenType_name[242:259],
	2011: _TokenType_name[259:270],
	2012: _TokenType_name[270:279],
	2013: _TokenType_name[279:292],
	2014: _TokenType_name[292:304],
	2015: _TokenType_name[304:313],
	2016: _TokenType_name[313:323],
	2017: _TokenType_name[323:335],
	2018: _TokenType_name[335:342],
	2019: _TokenType_name[342:354],
	2020: _TokenType_name[354:375],
	2021: _TokenType_name[375:392],
	2022: _TokenType_name[392:410],
	2023: _TokenType_name[410:430],
	2024: _TokenType_name[430:447],
	3000: _TokenType_name[447:454],
	3001: _TokenType_name[454:465],
	3002: _TokenType_name[465:477],
	3100: _TokenType_name[477:490],
	3101: _TokenType_name[490:508],
	3102: _TokenType_name[508:525],
	3103: _TokenType_name[525:546],
	3104: _TokenType_name[546:566],
	3105: _TokenType_name[566:583],
	3106: _TokenType_name[583:605],
	3107: _TokenType_name[605:621],
	3108: _TokenType_name[621:640],
	3109: _TokenType_name[640:659],
	3110: _TokenType_name[659:679],
	3111: _TokenType_name[679:700],
	3112: _TokenType_name[700:717],
	3113: _TokenType_name[717:735],
	3114: _TokenType_name[735:753],
	3115: _TokenType_name[753:772],
	3116: _TokenType_name[772:791],
	3200: _TokenType_name[791:804],
	3201: _TokenType_name[804:820],
	3202: _TokenType_name[820:838],
	3203: _TokenType_name[838:854],
	3204: _TokenType_name[854:874],
	3205: _TokenType_name[874:898],
	3206: _TokenType_name[898:914],
	4000: _TokenType_name[914:922],
	4001: _TokenType_name[922:934],
	5000: _TokenType_name[934:945],
	6000: _TokenType_name[945:952],
	6001: _TokenType_name[952:967],
	6002: _TokenType_name[967:983],
	6003: _TokenType_name[983:996],
	6004: _TokenType_name[996:1010],
	6100: _TokenType_name[1010:1024],
	6101: _TokenType_name[1024:1042],
	7000: _TokenType_name[1042:1049],
	7001: _TokenType_name[1049:1063],
	7002: _TokenType_name[1063:1074],
	7003: _TokenType_name[1074:1086],
	7004: _TokenType_name[1086:1100],
	7005: _TokenType_name[1100:1115],
	7006: _TokenType_name[1115:1128],
	7007: _TokenType_name[1128:1141],
	7008: _TokenType_name[1141:1154],
	7009: _TokenType_name[1154:1171],
	7010: _TokenType_name[1171:1187],
	7011: _TokenType_name[1187:1203],
	8000: _TokenType_name[1203:1207],
	8001: _TokenType_name[1207:1221],
	8002: _TokenType_name[1221:1231],
	8003: _TokenType_name[1231:1246],
}

func (i TokenType) String() string {
	if str, ok := _TokenType_map[i]; ok {
		return str
	}
	return fmt.Sprintf("TokenType(%d)", i)
}
