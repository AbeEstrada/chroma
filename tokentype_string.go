// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package chroma

import "fmt"

const _TokenType_name = "EOFNoneOtherErrorEscapeHighlightLineNumbersBackgroundKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation"

var _TokenType_map = map[TokenType]string{
	-8:   _TokenType_name[0:3],
	-7:   _TokenType_name[3:7],
	-6:   _TokenType_name[7:12],
	-5:   _TokenType_name[12:17],
	-4:   _TokenType_name[17:23],
	-3:   _TokenType_name[23:32],
	-2:   _TokenType_name[32:43],
	-1:   _TokenType_name[43:53],
	1000: _TokenType_name[53:60],
	1001: _TokenType_name[60:75],
	1002: _TokenType_name[75:93],
	1003: _TokenType_name[93:109],
	1004: _TokenType_name[109:122],
	1005: _TokenType_name[122:137],
	1006: _TokenType_name[137:148],
	2000: _TokenType_name[148:152],
	2001: _TokenType_name[152:165],
	2002: _TokenType_name[165:176],
	2003: _TokenType_name[176:193],
	2004: _TokenType_name[193:202],
	2005: _TokenType_name[202:214],
	2006: _TokenType_name[214:227],
	2007: _TokenType_name[227:237],
	2008: _TokenType_name[237:250],
	2009: _TokenType_name[250:262],
	2010: _TokenType_name[262:279],
	2011: _TokenType_name[279:290],
	2012: _TokenType_name[290:299],
	2013: _TokenType_name[299:312],
	2014: _TokenType_name[312:324],
	2015: _TokenType_name[324:333],
	2016: _TokenType_name[333:343],
	2017: _TokenType_name[343:355],
	2018: _TokenType_name[355:362],
	2019: _TokenType_name[362:374],
	2020: _TokenType_name[374:395],
	2021: _TokenType_name[395:412],
	2022: _TokenType_name[412:430],
	2023: _TokenType_name[430:450],
	2024: _TokenType_name[450:467],
	3000: _TokenType_name[467:474],
	3001: _TokenType_name[474:485],
	3002: _TokenType_name[485:497],
	3100: _TokenType_name[497:510],
	3101: _TokenType_name[510:528],
	3102: _TokenType_name[528:545],
	3103: _TokenType_name[545:566],
	3104: _TokenType_name[566:586],
	3105: _TokenType_name[586:603],
	3106: _TokenType_name[603:625],
	3107: _TokenType_name[625:641],
	3108: _TokenType_name[641:660],
	3109: _TokenType_name[660:679],
	3110: _TokenType_name[679:699],
	3111: _TokenType_name[699:720],
	3112: _TokenType_name[720:737],
	3113: _TokenType_name[737:755],
	3114: _TokenType_name[755:773],
	3115: _TokenType_name[773:792],
	3116: _TokenType_name[792:811],
	3200: _TokenType_name[811:824],
	3201: _TokenType_name[824:840],
	3202: _TokenType_name[840:858],
	3203: _TokenType_name[858:874],
	3204: _TokenType_name[874:894],
	3205: _TokenType_name[894:918],
	3206: _TokenType_name[918:934],
	4000: _TokenType_name[934:942],
	4001: _TokenType_name[942:954],
	5000: _TokenType_name[954:965],
	6000: _TokenType_name[965:972],
	6001: _TokenType_name[972:987],
	6002: _TokenType_name[987:1003],
	6003: _TokenType_name[1003:1016],
	6004: _TokenType_name[1016:1030],
	6100: _TokenType_name[1030:1044],
	6101: _TokenType_name[1044:1062],
	7000: _TokenType_name[1062:1069],
	7001: _TokenType_name[1069:1083],
	7002: _TokenType_name[1083:1094],
	7003: _TokenType_name[1094:1106],
	7004: _TokenType_name[1106:1120],
	7005: _TokenType_name[1120:1135],
	7006: _TokenType_name[1135:1148],
	7007: _TokenType_name[1148:1161],
	7008: _TokenType_name[1161:1174],
	7009: _TokenType_name[1174:1191],
	7010: _TokenType_name[1191:1207],
	7011: _TokenType_name[1207:1223],
	8000: _TokenType_name[1223:1227],
	8001: _TokenType_name[1227:1241],
	8002: _TokenType_name[1241:1251],
	8003: _TokenType_name[1251:1266],
}

func (i TokenType) String() string {
	if str, ok := _TokenType_map[i]; ok {
		return str
	}
	return fmt.Sprintf("TokenType(%d)", i)
}
